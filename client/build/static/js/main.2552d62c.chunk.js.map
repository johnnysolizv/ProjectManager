{"version":3,"sources":["context/user-context.js","components/login/login.js","components/register/form.js","components/home/header.js","components/mascotas/form.js","components/mascotas/list.js","components/mascotas/admin.js","components/home/home.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","initialState","username","password","LoginForm","props","useState","inputs","setInputs","context","useContext","navigate","useNavigate","formUpdate","e","target","name","value","onSubmit","preventDefault","login","xs","type","onChange","required","maxLength","minLength","md","onClick","stopPropagation","email","confirmPassword","RegisterForm","goLogin","axios","post","then","resp","data","ok","Swal","fire","message","catch","err","console","log","Header","user","logout","project","duedate","status","ProjectForm","id","useParams","actualizarValor","useEffect","get","error","edicion","ver","_id","accion","disabled","raza","ProjectList","list","filter","proyecto","map","elem","i","tag","update","InProgress","Completed","eliminar","ProjectAdmin","setList","actualizar","setActualizar","listarTodosLosProject","swal","to","index","element","put","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","delete","lista","splice","findIndex","path","SESSION_USER","Home","setUser","sessionStorage","getItem","JSON","parse","Provider","setItem","stringify","clear","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2552d62c.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport UserContext from \"../../context/user-context\";\r\n\r\nconst initialState = {\r\n    username: '',\r\n    password: ''\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n    const [inputs, setInputs] = useState(initialState);\r\n    const context = useContext(UserContext);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const formUpdate = (e) => {\r\n        const {name, value} = e.target;\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const goRegister = (e) => {\r\n        e?.stopPropagation();\r\n        navigate('/register');\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n        e.preventDefault();\r\n        context.login(inputs);\r\n    }\r\n\r\n    return <Container>\r\n        <Row>\r\n            <h1>Login</h1>\r\n        </Row>\r\n        <Form onSubmit={formSubmit}>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <FormGroup>\r\n                        <Label>Username:</Label>\r\n                        <Input type=\"text\" name=\"username\" value={inputs.username} onChange={formUpdate} required maxLength={50}/>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <FormGroup>\r\n                        <Label>Password:</Label>\r\n                        <Input type=\"password\" name=\"password\" value={inputs.password} onChange={formUpdate} required minLength={6}/>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={6} md={3}>\r\n                    <Button type=\"submit\">Login</Button>\r\n                </Col>\r\n                <Col xs={6} md={3}>\r\n                    <Button type=\"button\" onClick={goRegister}>Registrarse</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    \r\n        </Container>;\r\n}\r\n\r\n// export  SESSION_USER;\r\n\r\nexport default LoginForm;\r\n","import { useState } from \"react\";\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n}\r\n\r\nconst RegisterForm = (props) => {\r\n\r\n    const [inputs, setInputs] = useState(initialState);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const formUpdate = (e) => {\r\n        const {name, value} = e.target;\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const goLogin = (e) => {\r\n        e?.stopPropagation();\r\n        navigate('/login');\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/api/register', inputs)\r\n            .then(resp => {\r\n                if(resp.data.ok) {\r\n                    Swal.fire('Registro de Usuarios', resp.data.message, 'success');\r\n                    goLogin();\r\n                } else {\r\n                    Swal.fire('Registro de Usuarios', resp.data.message, 'error');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n\r\n            })\r\n    }\r\n\r\n    return <Container>\r\n        <Row>\r\n            <h1>Register new User</h1>\r\n        </Row>\r\n        <Form onSubmit={formSubmit}>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <FormGroup>\r\n                        <Label>Name:</Label>\r\n                        <Input type=\"text\" name=\"name\" value={inputs.name} onChange={formUpdate} required maxLength={50}/>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <FormGroup>\r\n                        <Label>Email:</Label>\r\n                        <Input type=\"email\" name=\"email\" value={inputs.email} onChange={formUpdate} required/>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <FormGroup>\r\n                        <Label>Password:</Label>\r\n                        <Input type=\"password\" name=\"password\" value={inputs.password} onChange={formUpdate} required minLength={6}/>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <FormGroup>\r\n                        <Label>Confirm Password:</Label>\r\n                        <Input type=\"password\" name=\"confirmPassword\" value={inputs.confirmPassword} onChange={formUpdate} required minLength={6}/>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={6} md={3}>\r\n                    <Button type=\"submit\">Registrar Usuario</Button>\r\n                </Col>\r\n                <Col xs={6} md={3}>\r\n                    <Button type=\"button\" onClick={goLogin}>Cancelar</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    \r\n        </Container>;\r\n}\r\n\r\nexport default RegisterForm;","import { useContext } from \"react\";\r\nimport { BiLogOutCircle } from 'react-icons/bi';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport UserContext from \"../../context/user-context\";\r\n\r\nconst Header = (props) => {\r\n    const context = useContext(UserContext);\r\n\r\n    const logout = e => {\r\n        context.logout();\r\n    }\r\n\r\n    return <Row>\r\n        <Col xs={10}>\r\n            <h2>{context.user?.name}</h2>\r\n        </Col>\r\n        <Col xs={2}>\r\n            <BiLogOutCircle onClick={logout}/>\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Navigate, useNavigate, useParams } from 'react-router-dom';\r\nimport { Row, Form, Col, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst initialState = {\r\n    project: '',\r\n    duedate: '',\r\n    status: 'Backlog',\r\n}\r\n\r\nconst ProjectForm = props => {\r\n\r\n    const [inputs, setInputs] = useState(initialState);\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    const actualizarValor = e => {\r\n        const { name, value } = e.target;\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value \r\n        });\r\n    }\r\n\r\n    const volver = e => {\r\n        e.stopPropagation();\r\n        navigate('../')\r\n    }\r\n\r\n    const guardar = e => {\r\n        e.preventDefault();\r\n        const data = {...inputs};\r\n        data._id = id;\r\n        props.accion(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(id) {\r\n            axios.get(`/api/project/${id}`)\r\n            .then(resp => setInputs(resp.data.data))\r\n            .catch(error => Swal.fire('Error', 'Error al obtener el proyecto, inténtelo mas tarde', 'error'));\r\n        }\r\n    }, [])\r\n\r\n    return <Row>\r\n        <h1>{props.edicion?'Editando el proyecto:' + inputs?.project: props.ver?'Visualizando el proyecto' + inputs?.project :'Creando una nuevo proyecto'}</h1>\r\n\r\n        <Form onSubmit={guardar}>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <FormGroup>\r\n                        <Label>Project</Label>\r\n                        <Input type=\"text\" name=\"project\" value={inputs.name} onChange={actualizarValor} required minLength={3} disabled={props.ver}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Due Date</Label>\r\n                        <Input type=\"Date\" name=\"duedate\" value={inputs.raza} onChange={actualizarValor} required disabled={props.ver}/>\r\n                    </FormGroup>                    \r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={3}>\r\n                   {props.accion && <Button type=\"submit\">Plan Project</Button>}\r\n                </Col>\r\n                <Col xs={3}>\r\n                    <Button type=\"button\" onClick={volver}>Volver</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    </Row>\r\n\r\n}\r\n\r\nexport default ProjectForm;","import { Link } from \"react-router-dom\";\r\nimport { Card, CardBody, CardTitle, CardText, Button, CardGroup } from \"reactstrap\";\r\nimport { useContext } from \"react\";\r\n\r\n\r\nconst ProjectList = (props) => {\r\n\r\n  const eliminar = (e, id) => {\r\n    e.stopPropagation();\r\n    if (id) {\r\n      props.eliminar(id);\r\n    }\r\n  };\r\n\r\n  const InProgress = (e, data) => {\r\n    e.stopPropagation();\r\n    data.status = 'InProgress';\r\n    props.update(data);\r\n}\r\n\r\nconst Completed = (e, data) => {\r\n    e.stopPropagation();\r\n    data.status = 'Completed';\r\n    props.update(data);\r\n}\r\n\r\n\r\n\r\n  console.log(\"PROPS\", props);\r\n\r\n  return (\r\n    <CardGroup>\r\n      <Card>\r\n        {props.list.filter(proyecto => proyecto.status == \"Backlog\").map((elem, i) => (\r\n          <>\r\n            <Card key={i}>\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\">{elem.project}</CardTitle>\r\n                <CardText>{elem.duedate}</CardText>\r\n                <Button onClick={e => InProgress(e, elem)}> Start Project\r\n                 \r\n                 </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </>\r\n        ))}\r\n      </Card>\r\n      <Card>\r\n        {props.list.filter(proyecto => proyecto.status == \"InProgress\").map((elem, i) => (\r\n          <>\r\n            <Card key={i}>\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\">{elem.project}</CardTitle>\r\n                <CardText>{elem.duedate}</CardText>\r\n                <Button onClick={e => Completed(e, elem)} > Move To Completted\r\n                 \r\n                </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </>\r\n        ))}\r\n      </Card>\r\n      <Card>\r\n        {props.list.filter(proyecto => proyecto.status == \"Completed\").map((elem, i) => (\r\n          <>\r\n            <Card key={i}>\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\">{elem.project}</CardTitle>\r\n                <CardText>{elem.duedate}</CardText>\r\n                <Button onClick={e => eliminar(e, elem._id)}>\r\n                  Remove Project                  \r\n                </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </>\r\n        ))}\r\n      </Card>\r\n    </CardGroup>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, Route, Routes, useNavigate } from 'react-router-dom';\r\nimport { Container, Row } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport swal from 'sweetalert2';\r\nimport Header from '../home/header';\r\nimport ProjectForm from './form';\r\nimport ProjectList from './list';\r\n\r\nconst ProjectAdmin = (props) => {\r\n\r\n    const [list, setList] = useState([]);\r\n    const [actualizar, setActualizar] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        listarTodosLosProject(null);\r\n    }, [actualizar]);\r\n\r\n    const listarProjectUsuario = (e) =>{\r\n        e.stopPropagation();\r\n        axios.get('/api/project/user')\r\n        .then(resp => setList(resp.data.data))\r\n        .catch(error => \r\n            swal.fire('Error', error.message, 'error'));\r\n    }\r\n\r\n    const listarTodosLosProject = e => {\r\n        e?.stopPropagation();\r\n        axios.get('/api/project')\r\n        .then(resp => setList(resp.data.data))\r\n        .catch(error => \r\n            swal.fire('Error', error.message, 'error'));\r\n    }\r\n\r\n    const agregar = (data) => {\r\n        axios.post('/api/project', data)\r\n        .then(resp => {\r\n            // Se agrega elemento creado al listado directamente evitando realizar una llamada al backend para recargar el listado\r\n            setList([\r\n                ...list,\r\n                resp.data.data\r\n            ]);\r\n            navigate('./')\r\n        }).catch(error => {\r\n            console.log(error); // Revisar el mensaje de error\r\n            Swal.fire('Error al crear el project', error?.message, 'error')\r\n        });\r\n    }\r\n\r\n    const editar = (data) => {\r\n        axios.put(`/api/project/${data._id}`, data)\r\n            .then(resp => {\r\n                setActualizar(!actualizar)\r\n                navigate('./');\r\n            })\r\n            .catch(error => Swal.fire('Error al actualizar el project', error?.message, 'error'));\r\n    }\r\n\r\n    const update = (data) => {\r\n        axios.put(`/api/project/${data._id}`, data)\r\n            .then(resp => {\r\n                setActualizar(!actualizar)\r\n                navigate('./');\r\n            })\r\n            .catch(error => Swal.fire('Error al actualizar el project', error?.message, 'error'));\r\n    }\r\n\r\n\r\n    const eliminar = id => {\r\n        if(id) {\r\n            Swal.fire({\r\n                title:'Eliminar el proyecto',\r\n                text: '¿Esta seguro que desea eliminar el proyecto',\r\n                icon:'question',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si, eliminar!!!',\r\n                cancelButtonText: 'No'\r\n            }).then(resp => {\r\n                if(resp.isConfirmed){\r\n                    axios.delete(`/api/project/${id}`)\r\n                    .then(resp => {\r\n                        const lista = [...list];\r\n                        lista.splice(lista.findIndex(e => e._id === id), 1);\r\n                        setList(lista);\r\n                    }).catch(error => Swal.fire('Error al eliminar el proyecto', error?.message, 'error'));\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return <Container>\r\n            <Header />\r\n            <Row>\r\n                <Link to={\"./\"}> Listado </Link>\r\n                <Link to={\"add\"}> Agregar </Link>\r\n\r\n            </Row>\r\n            <Routes>\r\n                <Route index element={<ProjectList  list={list} update={update} eliminar={eliminar}/>}/>\r\n                <Route path=\"add\" element={<ProjectForm accion={agregar}  />}/>\r\n\r\n            </Routes>\r\n    </Container>;\r\n}\r\n\r\nexport default ProjectAdmin;","import { useEffect, useState } from \"react\";\r\nimport { Route, Routes, useNavigate } from \"react-router\";\r\nimport UserContext from \"../../context/user-context\";\r\nimport LoginForm from \"../login/login\";\r\nimport RegisterForm from \"../register/form\";\r\nimport ProjectAdmin from '../mascotas/admin'; \r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst SESSION_USER = 'SESSION_USER';\r\n\r\nexport { SESSION_USER };\r\n\r\nconst Home = (props) => {\r\n\r\n    const [user, setUser] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const login = (inputs) => {\r\n        axios.post('/api/login', inputs)\r\n            .then(resp => {\r\n                if(resp.data.ok) {\r\n                    setUser(resp.data.data);\r\n                    sessionStorage.setItem(SESSION_USER, JSON.stringify(resp.data.data));\r\n                    navigate('/project/');\r\n                } else {\r\n                    Swal.fire('Login', resp.data.message, 'error');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n\r\n            })\r\n    }\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        sessionStorage.clear();\r\n        navigate('/login');\r\n    }\r\n  \r\n    useEffect(() => {\r\n        if(sessionStorage.getItem(SESSION_USER)) {\r\n            setUser(JSON.parse(sessionStorage.getItem(SESSION_USER)));\r\n            navigate('/project/');\r\n        } else {\r\n            navigate('/login');\r\n        }\r\n\r\n    }, []);\r\n  \r\n    return ( \r\n      <UserContext.Provider value={{user, setUser, login, logout}}>\r\n          <Routes>\r\n            <Route path=\"/login\" element={<LoginForm />}/>\r\n            <Route path=\"/register\" element={<RegisterForm />}/>\r\n            <Route path=\"/project/*\" element={<ProjectAdmin/>}/>\r\n          </Routes>\r\n      </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/home/home';\n\nfunction App() {\n  return ( \n      <BrowserRouter>\n        <Routes>\n          <Route index path=\"/*\" element={<Home />}/>\n        </Routes>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}